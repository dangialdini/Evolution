@model Evolution.Models.ViewModels.ViewModelBase
@using Evolution.Resources

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="panel panel-default">
    <div class="panel-heading">@Model.PageTitle</div>
    <div class="panel-body">
        <div class="row">
            <div class="col-sm-12">
                <div id="scheduledtasks" class="table-responsive"></div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        var gridOptions = {
            appname: '@EvolutionResources.lblApplicationName',
            container: 'scheduledtasks',
            tableclass: 'gridStyle',
            pagesize: 50,
            pagenumber: 1,
            //pagesizes: [ 10, 30, 50, 100 ],
            showsearch: true,
            keyfield: 'Id',
            datasourceurl: '/SystemAdmin/ScheduledTasks/GetScheduledTasks?index={INDEX}&pageno={PAGENO}&pagesize={PAGESIZE}&search={SEARCH}',
            editurl: '@Url.Action("Edit")?id={KEYFIELD}',
            deleteurl: '@Url.Action("Delete")?id={KEYFIELD}&index={INDEX}',
            deleteconfirm: '@EvolutionResources.errConfirmDeleteItem',
            columnDefs: [
                { heading: '@EvolutionResources.lblTaskName', width: '250px', class: '', fields: [{ type: 'field', field: 'TaskName', width: '', class: '' }] },
                { heading: '@EvolutionResources.lblCmdParameter', width: '', class: '', fields: [{ type: 'field', field: 'CmdParameter', width: '', class: '' }] },
                { heading: '@EvolutionResources.lblCurrentState', width: '140px', class: '', fields: [{ type: 'field', field: 'CurrentState', width: '', class: '' }] },
                { heading: '@EvolutionResources.lblLastRun', width: '200px', class: '', fields: [{ type: 'isodatetime', field: 'LastRunISO', format: '@Model.DisplayDateFormat', width: '', class: '' }] },
                { heading: '@EvolutionResources.lblEnabled', width: '90px', class: 'text-center', fields: [{ type: 'enabled', field: 'Enabled', width: '', class: '' }] },
                {
                    heading: '@EvolutionResources.lblAction', width: '140px', class: 'text-center',
                    fields: [
                        { type: 'buttonedit', text: '@EvolutionResources.btnEdit', class: '', icon: 'edit' },
                        { type: 'button', text: '@EvolutionResources.btnRun', class: '', jsfunc: 'ConfirmRunTask({KEYFIELD})', icon: 'repeat' },
                        { type: 'button', text: '@EvolutionResources.btnLogs', class: '', url: '@Url.Action("ViewLog")?taskid={KEYFIELD}', icon: 'list-alt' },
                        { type: 'buttondelete', text: '@EvolutionResources.btnDelete', class: '', icon: 'trash' }
                    ]
                }
            ]
        };

        gridManager.InitialiseGrid(gridOptions);

        // Set up a refresh
        setInterval(doRefresh, 60000);

        function doRefresh() {
            window.location.reload();
        }
    });

    function ConfirmRunTask(id) {
        return Confirm('@EvolutionResources.cnfConfirmRunTask', '@EvolutionResources.lblApplicationName', id, 'DoRunTask');
    }

    function DoRunTask(id) {
        window.location = '@Url.Action("RunTask")?taskid=' + id;
    }

</script>

